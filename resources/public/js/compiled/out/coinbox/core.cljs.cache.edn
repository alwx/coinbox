{:rename-macros {}, :renames {}, :externs {React {createElement {}}, document {querySelector {}}}, :use-macros {}, :excludes #{}, :name coinbox.core, :imports nil, :requires {rum rum.core, rum.core rum.core, api coinbox.api, coinbox.api coinbox.api}, :cljs.spec/speced-vars [], :uses nil, :defs {*state {:name coinbox.core/*state, :file "src/cljs/coinbox/core.cljs", :line 5, :column 1, :end-line 5, :end-column 16, :meta {:file "/Users/alwx/Documents/dev/personal/coinbox/src/cljs/coinbox/core.cljs", :line 5, :column 10, :end-line 5, :end-column 16}, :tag any}, root {:name coinbox.core/root, :file "src/cljs/coinbox/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :arglists (quote ([text])), :meta {:file "/Users/alwx/Documents/dev/personal/coinbox/src/cljs/coinbox/core.cljs", :line 9, :column 11, :end-line 9, :end-column 15, :arglists (quote ([text]))}, :tag any}, render {:protocol-inline nil, :meta {:file "/Users/alwx/Documents/dev/personal/coinbox/src/cljs/coinbox/core.cljs", :line 12, :column 16, :end-line 12, :end-column 22, :export true, :arglists (quote ([]))}, :name coinbox.core/render, :variadic false, :file "src/cljs/coinbox/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:count :message}, :order [:count :message]}, :doc nil}